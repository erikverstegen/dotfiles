#!/usr/bin/env bash

info() {
    if [[ ! $quiet ]]; then
        printf "\33[34m${1}\33[0m\n"
    fi
}

success() {
    if [[ ! $quiet ]]; then
        printf "\33[32m${1}\33[0m\n"
    fi
}

error() {
    printf "\33[31mError: ${1}\33[0m\n"
}

# Clone the dotfiles from GitHub if the dotfiles directory does not exist.
if [[ ! -d "${HOME}/.dotfiles" ]]; then
    info "Cloning the dotfiles..."

    git clone -q https://github.com/erikverstegen/dotfiles.git "${HOME}/.dotfiles"

    success "Finished cloning the dotfiles."
fi

cd "${HOME}/.dotfiles"

# Test for command line arguments.
for arg in $@
do
    case $arg in
        -h|--help)
            printf "Usage:\n"
            printf "  $(basename "$0") [options]\n\n"

            printf "Options:\n"
            printf "  -h, --help    Display this help information.\n"
            printf "      --no-sync Don't sync with the remote repository.\n\n"
            printf "  -q, --quiet   Don't display any information."

            printf "Documentation can be found at https://github.com/erikverstegen/dotfiles.\n\n"

            printf "Copyright (c) Erik Verstegen\n"
            printf "Licensed under the MIT license\n"

            exit 0
        ;;

        --no-sync)
            no_sync=true
        ;;

        -q|--quiet)
            quiet=true
        ;;

        -*|--*)
            error "Unrecognized argument \"${arg}\"."

            exit 1
        ;;
    esac
done

info "Installing the dotfiles..."

if [[ "$(uname)" == "Darwin" ]]; then
    source ./install/darwin/xcode_tools.sh
fi

if [[ ! $no_sync ]]; then
    info "Syncing with the remote Git repository..."

    git pull -qr origin master

    success "Finished syninc with the remote Git repository."
fi

# Test whether the user is running a supported operating system.
if [ -f "./install/$(uname).sh" ]; then
    source ./install/$(uname).sh
else
    error "Running on an unsupported operating system ($(uname)). Aborting."

    exit 1
fi

success "Finished installing the dotfiles."

# Return to the original directory.
cd $OLDPWD
